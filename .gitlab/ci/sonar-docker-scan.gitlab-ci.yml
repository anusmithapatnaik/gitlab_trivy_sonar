# Sonar scan 
core-sonar_codequality: 
   stage: sonar-scan
   image: 
     name: sonarsource/sonar-scanner-cli:latest
     entrypoint: [""]
   variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
    GIT_DEPTH: "0"  
    SONARPROJECT_NAME: danlixdev-app
   cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
   script:
      # SONAR_HOST and SONARQUBE_TOKEN sholud configure on GITLAB CI Environment variables
      - sonar-scanner -Dsonar.host.url=${SONAR_HOST} -Dsonar.login=${SONARQUBE_TOKEN} -Dsonar.projectVersion=$CI_PIPELINE_ID -Dsonar.qualitygate.wait=true -Dsonar.projectKey=$SONARPROJECT_NAME -Dsonar.projectName=$SONARPROJECT_NAME
   allow_failure: true
   only:
     - tags

#  Docker Vulnerabilities   Scan using Trivy
core_trivy_vulnerabilities :
  stage: docker-vulnerability-scan
  image: docker:latest
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    IMAGE: node:latest

  before_script:

    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  script:
    - echo "Building Module docker image"
    - IMAGE_NAME=danlixdev-app-img
    - echo ${IMAGE_NAME}
    - docker build -f ./container/danlix_devapp.Dockerfile -t ${IMAGE_NAME} .
    - ./trivy -d --cache-dir .trivycache/ image --exit-code 0 --no-progress --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $IMAGE_NAME
    - ./trivy -d --cache-dir .trivycache/ image --exit-code 0 --no-progress --severity HIGH $IMAGE_NAME
    # Fail on severe vulnerabilities
    - ./trivy -d --cache-dir .trivycache/ image --exit-code 1 --no-progress --severity CRITICAL $IMAGE_NAME
  cache:
    paths:
      - .trivycache/
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
  allow_failure: false
  only:
    - tags

